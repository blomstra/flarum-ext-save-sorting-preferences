{"version":3,"file":"forum.js","mappings":"MACA,IAAIA,EAAsB,CCA1BA,EAAyBC,IACxB,IAAIC,EAASD,GAAUA,EAAOE,WAC7B,IAAOF,EAAiB,QACxB,IAAM,EAEP,OADAD,EAAoBI,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,CAAM,ECLdF,EAAwB,CAACM,EAASC,KACjC,IAAI,IAAIC,KAAOD,EACXP,EAAoBS,EAAEF,EAAYC,KAASR,EAAoBS,EAAEH,EAASE,IAC5EE,OAAOC,eAAeL,EAASE,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,IAE1E,ECNDR,EAAwB,CAACc,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,GCClFf,EAAyBM,IACH,oBAAXa,QAA0BA,OAAOC,aAC1CV,OAAOC,eAAeL,EAASa,OAAOC,YAAa,CAAEC,MAAO,WAE7DX,OAAOC,eAAeL,EAAS,aAAc,CAAEe,OAAO,GAAO,G,+BCL9D,MAAM,EAA+BC,OAAOC,KAAKC,OAAO,c,MCExDC,GAAAA,aAAiBC,IAAI,qCAAqC,WAAO,ICFjE,MAAM,EAA+BJ,OAAOC,KAAKC,OAAO,8B,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,a,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,8B,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,iBCAlD,EAA+BF,OAAOC,KAAKC,OAAO,yB,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,4B,aCOxDC,IAAAA,aAAiBC,IAAI,qCAAqC,WACxD,IAAIC,EAAOF,IAAAA,OAAWG,SAASD,KAE1BF,IAAAA,KAASI,QAAQC,SAItBC,EAAAA,EAAAA,UAASC,IAAAA,UAAqB,aAAa,SAAgBC,GACzD,IAGWC,EAHLC,EAAQ,IAAIC,KACZC,EAAUZ,IAAAA,YAAgBY,UAE3BV,IACHA,EAAuB,OAAnBO,EAAGT,IAAAA,QAAYQ,OAAmB,OAAfC,EAAhBA,EAAkBI,oBAAa,EAA/BJ,EAAmD,iBAG5D,IAAMK,EAAc7B,OAAO8B,KAAKH,GAASI,QAAO,SAACC,EAAUC,GAEzD,OADAD,EAAIC,GAAUlB,IAAAA,WAAemB,MAAM,yBAAyBD,EAAM,WAC3DD,CACT,GAAG,CAAC,GA4BJ,OA1BAP,EAAMT,IACJ,OACAmB,EAACC,IAAQ,CACPC,gBAAgB,SAChBC,MAAOT,EAAYZ,IAASjB,OAAO8B,KAAKH,GAASY,KAAI,SAACzC,GAAG,OAAK+B,EAAY/B,EAAI,IAAE,GAChF0C,sBAAuBzB,IAAAA,WAAemB,MAAM,2DAE3ClC,OAAO8B,KAAKD,GAAaU,KAAI,SAAC5B,GAC7B,IAAM2B,EAAQT,EAAYlB,GACpB8B,GAAUxB,GAAQjB,OAAO8B,KAAKH,GAAS,MAAQhB,EAQrD,OACEwB,EAACO,IAAM,CAACC,MAAMF,GAAS,eAAuBG,QAPhD,WAAuB,IAAAC,EACrB9B,IAAAA,OAAW+B,WAAWC,KAAKhC,IAAAA,OAAYJ,EAAvCI,GACAE,EAAON,EACS,OAAhBkC,EAAA9B,IAAAA,QAAYQ,OAAZsB,EAAkBG,gBAAgB,CAAEC,gBAAiBtC,GACvD,EAGsE8B,OAAQA,GACzEH,EAGP,MAIGb,CACT,GACF,G","sources":["webpack://@blomstra/save-sorting-preferences/webpack/bootstrap","webpack://@blomstra/save-sorting-preferences/webpack/runtime/compat get default export","webpack://@blomstra/save-sorting-preferences/webpack/runtime/define property getters","webpack://@blomstra/save-sorting-preferences/webpack/runtime/hasOwnProperty shorthand","webpack://@blomstra/save-sorting-preferences/webpack/runtime/make namespace object","webpack://@blomstra/save-sorting-preferences/external root \"flarum.core.compat['common/app']\"","webpack://@blomstra/save-sorting-preferences/./src/common/index.ts","webpack://@blomstra/save-sorting-preferences/external root \"flarum.core.compat['common/components/Dropdown']\"","webpack://@blomstra/save-sorting-preferences/external root \"flarum.core.compat['forum/app']\"","webpack://@blomstra/save-sorting-preferences/external root \"flarum.core.compat['forum/components/IndexPage']\"","webpack://@blomstra/save-sorting-preferences/external root \"flarum.core.compat['common/extend']\"","webpack://@blomstra/save-sorting-preferences/external root \"flarum.core.compat['common/utils/ItemList']\"","webpack://@blomstra/save-sorting-preferences/external root \"flarum.core.compat['common/components/Button']\"","webpack://@blomstra/save-sorting-preferences/./src/forum/index.tsx"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/app'];","import app from 'flarum/common/app';\n\napp.initializers.add('blomstra/save-sorting-preferences', () => {});\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Dropdown'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/IndexPage'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/utils/ItemList'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Button'];","import Dropdown from 'flarum/common/components/Dropdown';\nimport app from 'flarum/forum/app';\nimport IndexPage from 'flarum/forum/components/IndexPage';\nimport { override } from 'flarum/common/extend';\nimport ItemList from 'flarum/common/utils/ItemList';\nimport Button from 'flarum/common/components/Button';\n\napp.initializers.add('blomstra/save-sorting-preferences', () => {\n  let sort = app.search.params().sort;\n\n  if (!app.data.session.userId) {\n    return;\n  }\n\n  override(IndexPage.prototype, 'viewItems', function (this, user) {\n    const items = new ItemList();\n    const sortMap = app.discussions.sortMap();\n\n    if (!sort) {\n      sort = app.session.user?.preferences()?.['discussion_sort'];\n    }\n\n    const sortOptions = Object.keys(sortMap).reduce((acc: any, sortId) => {\n      acc[sortId] = app.translator.trans(`core.forum.index_sort.${sortId}_button`);\n      return acc;\n    }, {});\n\n    items.add(\n      'sort',\n      <Dropdown\n        buttonClassName=\"Button\"\n        label={sortOptions[sort] || Object.keys(sortMap).map((key) => sortOptions[key])[0]}\n        accessibleToggleLabel={app.translator.trans('core.forum.index_sort.toggle_dropdown_accessible_label')}\n      >\n        {Object.keys(sortOptions).map((value) => {\n          const label = sortOptions[value];\n          const active = (sort || Object.keys(sortMap)[0]) === value;\n\n          function handleClick() {\n            app.search.changeSort.bind(app.search, value)();\n            sort = value;\n            app.session.user?.savePreferences({ discussion_sort: value });\n          }\n\n          return (\n            <Button icon={active ? 'fas fa-check' : true} onclick={handleClick} active={active}>\n              {label}\n            </Button>\n          );\n        })}\n      </Dropdown>\n    );\n\n    return items;\n  });\n});\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","flarum","core","compat","app","add","sort","params","session","userId","override","IndexPage","user","_app$session$user","items","ItemList","sortMap","preferences","sortOptions","keys","reduce","acc","sortId","trans","m","Dropdown","buttonClassName","label","map","accessibleToggleLabel","active","Button","icon","onclick","_app$session$user2","changeSort","bind","savePreferences","discussion_sort"],"sourceRoot":""}